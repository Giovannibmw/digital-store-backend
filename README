# Digital Store Backend

API completa para o Projeto de front-end Drip Store, desenvolvida  com ferramentas atuais e eficientes que fortalecem o ambiente Node.js.

## 📚 Visão Geral

Este projeto fornece uma API RESTful para gerenciar usuários, produtos e categorias de uma loja virtual. Ele inclui autenticação JWT, testes automatizados e uma arquitetura modular.

## 🚀 Tecnologias Utilizadas

- Node.js
- Express
- Sequelize (ORM)
- PostgreSQL
- JWT (JSON Web Token)
- bcryptjs
- Jest & Supertest (testes)
- dotenv

## 📁 Estrutura de Pastas

```
digital-store-backend/
│
├── src/
│   ├── app.js                # Configuração principal do app Express
│   ├── server.js             # Inicialização do servidor
│   ├── config/
│   │   └── database.js       # Configuração do Sequelize
│   ├── controllers/          # Lógica dos endpoints
│   ├── database/
│   │   └── index.js          # Inicialização dos modelos e conexão
│   ├── middleware/           # Middlewares (ex: autenticação)
│   ├── models/               # Modelos Sequelize
│   ├── routes/               # Rotas da API
│   └── services/             # Regras de negócio
│
├── tests/                    # Testes automatizados
├── .env                      # Variáveis de ambiente
├── package.json
└── README.md
```

## 🎯 Funcionalidades

- Cadastro, autenticação e gerenciamento de usuários
- CRUD de produtos e categorias
- Associação de produtos a categorias
- Opções e imagens para produtos
- Autenticação JWT para rotas protegidas
- Testes automatizados

## 📦 Instalação

1. Clone o repositório:
   ```sh
   git clone https://github.com/seu-usuario/digital-store-backend.git
   cd digital-store-backend
   ```

2. Instale as dependências:
   ```sh
   npm install
   ```

3. Configure o arquivo `.env` com suas credenciais do banco e JWT.

4. Crie o banco de dados PostgreSQL conforme configurado no `.env`.

## ▶️ Uso

- Para rodar em modo desenvolvimento:
  ```sh
  npm run dev
  ```

- Para rodar os testes:
  ```sh
  npm test
  ```

A API estará disponível em `http://localhost:3001`.

## 📖 Documentação

- [Documentação das rotas de usuário](src/routes/userRoutes.js)
- [Documentação das rotas de produto](src/routes/productRoutes.js)
- [Documentação das rotas de categoria](src/routes/categoryRoutes.js)

Consulte os arquivos de rota e controllers para detalhes dos endpoints.

---

Desenvolvido por Giovanni Barros Moreira